commit 134973187a9438d873ed6726386484cb8baee02f
Author: Anthony Minessale <anthm@freeswitch.org>
Date:   Mon Jul 23 14:03:53 2012 -0500

    FS-4092 --resolve

diff --git a/build/modules.conf.in b/build/modules.conf.in
index fdb6319..436ada7 100644
--- a/build/modules.conf.in
+++ b/build/modules.conf.in
@@ -58,6 +58,7 @@ codecs/mod_bv
 codecs/mod_g723_1
 codecs/mod_g729
 codecs/mod_h26x
+codecs/mod_vp8
 #codecs/mod_ilbc
 #codecs/mod_isac
 #codecs/mod_opus
diff --git a/conf/insideout/autoload_configs/modules.conf.xml b/conf/insideout/autoload_configs/modules.conf.xml
index 3c864ae..7f17362 100644
--- a/conf/insideout/autoload_configs/modules.conf.xml
+++ b/conf/insideout/autoload_configs/modules.conf.xml
@@ -63,6 +63,7 @@
     <!--<load module="mod_ilbc"/>-->
     <load module="mod_speex"/>
     <load module="mod_h26x"/>
+    <load module="mod_vp8"/>
     <!--<load module="mod_siren"/>-->
 
     <!-- File Format Interfaces -->
diff --git a/conf/sbc/autoload_configs/modules.conf.xml b/conf/sbc/autoload_configs/modules.conf.xml
index fb59b38..71d7a11 100644
--- a/conf/sbc/autoload_configs/modules.conf.xml
+++ b/conf/sbc/autoload_configs/modules.conf.xml
@@ -42,6 +42,7 @@
     <!--<load module="mod_ilbc"/>-->
     <load module="mod_speex"/>
     <load module="mod_h26x"/>
+    <load module="mod_vp8"/>
     <!--<load module="mod_siren"/>-->
 
     <!-- Timers -->
diff --git a/conf/vanilla/autoload_configs/modules.conf.xml b/conf/vanilla/autoload_configs/modules.conf.xml
index f88bb7b..a12b968 100644
--- a/conf/vanilla/autoload_configs/modules.conf.xml
+++ b/conf/vanilla/autoload_configs/modules.conf.xml
@@ -85,6 +85,7 @@
     <!--<load module="mod_ilbc"/>-->
     <load module="mod_speex"/>
     <load module="mod_h26x"/>
+    <load module="mod_vp8"/>
     <!--<load module="mod_siren"/>-->
     <!--<load module="mod_isac"/>-->
     <!--<load module="mod_celt"/>-->
diff --git a/src/mod/codecs/mod_vp8/mod_vp8.c b/src/mod/codecs/mod_vp8/mod_vp8.c
new file mode 100644
index 0000000..a0e7577
--- /dev/null
+++ b/src/mod/codecs/mod_vp8/mod_vp8.c
@@ -0,0 +1,102 @@
+/*
+ * FreeSWITCH Modular Media Switching Software Library / Soft-Switch Application
+ * Copyright (C) 2005-2012, Anthony Minessale II <anthm@freeswitch.org>
+ *
+ * Version: MPL 1.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is FreeSWITCH Modular Media Switching Software Library / Soft-Switch Application
+ *
+ * The Initial Developer of the Original Code is
+ * Anthony Minessale II <anthm@freeswitch.org>
+ * Portions created by the Initial Developer are Copyright (C)
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *
+ * Anthony Minessale II <anthm@freeswitch.org>
+ * Seven Du <dujinfang@gmail.com>
+ *
+ * mod_vp8.c -- VP8 Video Codec
+ *
+ */
+
+#include <switch.h>
+
+SWITCH_MODULE_LOAD_FUNCTION(mod_vp8_load);
+SWITCH_MODULE_DEFINITION(mod_vp8, mod_vp8_load, NULL, NULL);
+
+static switch_status_t switch_vp8_init(switch_codec_t *codec, switch_codec_flag_t flags, const switch_codec_settings_t *codec_settings)
+{
+	int encoding, decoding;
+
+	encoding = (flags & SWITCH_CODEC_FLAG_ENCODE);
+	decoding = (flags & SWITCH_CODEC_FLAG_DECODE);
+
+	if (!(encoding || decoding)) {
+		return SWITCH_STATUS_FALSE;
+	} else {
+		if (codec->fmtp_in) {
+			codec->fmtp_out = switch_core_strdup(codec->memory_pool, codec->fmtp_in);
+		}
+		return SWITCH_STATUS_SUCCESS;
+	}
+}
+
+static switch_status_t switch_vp8_encode(switch_codec_t *codec,
+										  switch_codec_t *other_codec,
+										  void *decoded_data,
+										  uint32_t decoded_data_len,
+										  uint32_t decoded_rate, void *encoded_data, uint32_t *encoded_data_len, uint32_t *encoded_rate,
+										  unsigned int *flag)
+{
+	return SWITCH_STATUS_FALSE;
+}
+
+static switch_status_t switch_vp8_decode(switch_codec_t *codec,
+										  switch_codec_t *other_codec,
+										  void *encoded_data,
+										  uint32_t encoded_data_len,
+										  uint32_t encoded_rate, void *decoded_data, uint32_t *decoded_data_len, uint32_t *decoded_rate,
+										  unsigned int *flag)
+{
+	return SWITCH_STATUS_FALSE;
+}
+
+static switch_status_t switch_vp8_destroy(switch_codec_t *codec)
+{
+	return SWITCH_STATUS_SUCCESS;
+}
+
+SWITCH_MODULE_LOAD_FUNCTION(mod_vp8_load)
+{
+	switch_codec_interface_t *codec_interface;
+	/* connect my internal structure to the blank pointer passed to me */
+	*module_interface = switch_loadable_module_create_module_interface(pool, modname);
+	SWITCH_ADD_CODEC(codec_interface, "VP8 Video (passthru)");
+	switch_core_codec_add_implementation(pool, codec_interface,
+										 SWITCH_CODEC_TYPE_VIDEO, 99, "VP8", NULL, 90000, 90000, 0,
+										 0, 0, 0, 0, 1, 1, switch_vp8_init, switch_vp8_encode, switch_vp8_decode, switch_vp8_destroy);
+	/* indicate that the module should continue to be loaded */
+	return SWITCH_STATUS_SUCCESS;
+}
+
+/* For Emacs:
+ * Local Variables:
+ * mode:c
+ * indent-tabs-mode:t
+ * tab-width:4
+ * c-basic-offset:4
+ * End:
+ * For VIM:
+ * vim:set softtabstop=4 shiftwidth=4 tabstop=4:
+ */
